<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">  
     
     <!-- 定义一个成功认证的处理器 -->
      <bean id="authenticationSuccessHandlerImpl" class="com.ltchen.demo.string.security.handler.AuthenticationSuccessHandlerImpl"/>
     
     
    <!-- 定义一个不经过安全过滤的页面  -->
<!--     <security:http security="none" pattern="/login.jsp"/> -->
    <!-- 定义一个权限控制规则,pattern表示对哪些url控制,aceess表示需要什么权限才可以访问 -->
    <security:http auto-config="true" use-expressions="true">
      <!-- 基于http-basic的登录表单 -->
	  <!-- <security:http-basic/> -->
      <!-- 基于自定义的登录表单页面  -->
      <security:form-login login-page="/login.jsp" login-processing-url="/login" 
      username-parameter="username" password-parameter="password"
      authentication-success-handler-ref="authenticationSuccessHandlerImpl"
      authentication-failure-url="/login_failure.jsp"/>
      <!-- 因为需要提供安全认证页面,那么需要放行此页面,否则会形成死循环,可以使用匿名用户访问或页面不经过安全过滤 -->
<!--       <security:intercept-url pattern="/login.jsp" access="hasRole('IS_AUTHENTICATED_ANONYMOUSLY')"/> -->
      <security:intercept-url pattern="/login*.jsp" access="hasRole('ROLE_ANONYMOUS')"/>
      <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
   	</security:http> 
     
    <!-- 定义用户认证,authentication-provider用于真正的处理认证,通常用户信息来自于数据库等,这里现自定义简单的用户信息-->
    <security:authentication-manager>
      <security:authentication-provider>
         <security:user-service>
            <security:user name="user" password="user" authorities="ROLE_USER"/>
            <security:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
         </security:user-service>
         <!-- 还可以通过指定properties文件指定用户信息 -->
		 <!-- <security:user-service properties="classpath:users.properties"/> -->
      </security:authentication-provider>
   </security:authentication-manager>
     
    <!-- 配置获取spring上下文工具类 -->
    <bean id="springContextHelper" class="com.ltchen.demo.util.spring.SpringContextHelper" />
    
    <!-- 自动扫描，依赖注入dao的实现类 -->
    <context:component-scan base-package="com.ltchen.demo.spring.security.dao.impl" />
    
    <!-- 自动扫描，依赖注入service的实现类 -->
    <context:component-scan base-package="com.ltchen.demo.spring.security.service.impl" />      
</beans>  
